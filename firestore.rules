rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection rules
    match /users/{userId} {
      // Allow read for authenticated users (needed for friend search and viewing profiles)
      allow read: if isAuthenticated();
      // Allow write only if user is modifying their own document
      allow write: if isOwner(userId);
    }

    // Work sessions rules
    match /workSessions/{sessionId} {
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)/friends/$(resource.data.userId))
      );
      allow write: if isAuthenticated() && (
        !resource.data || resource.data.userId == request.auth.uid
      );
    }

    // Projects rules
    match /projects/{projectId} {
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid ||
        exists(/databases/$(database)/documents/users/$(request.auth.uid)/friends/$(resource.data.userId))
      );
      allow write: if isAuthenticated() && (
        !resource.data || resource.data.userId == request.auth.uid
      );
    }
  }
} 